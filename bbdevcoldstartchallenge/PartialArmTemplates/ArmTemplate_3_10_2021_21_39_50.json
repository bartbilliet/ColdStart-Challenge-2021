{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bbdevcoldstartchallenge"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_csv_to_sql_server')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Import CSV once to SQL",
				"activities": [
					{
						"name": "Copy_h6y",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "azuredatafactory-input//coldstart-orders-historical.csv"
							},
							{
								"name": "Destination",
								"value": "dbo.Orders"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "SqlServerSink"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Id",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									},
									{
										"source": {
											"name": "User",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "User",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "IcecreamId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IcecreamId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_h6y",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_h6y",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_h6y')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_h6y')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_h6y')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbdevcoldstartchallengedb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Id",
						"type": "uniqueidentifier",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "User",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "IcecreamId",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Status",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "DriverId",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "FullAddress",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LastPosition",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_h6y')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataFactory_sourceblobstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "coldstart-orders-historical.csv",
						"container": "azuredatafactory-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "User",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "IcecreamId",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bbdevcoldstartchallenge')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "https://bbdevcoldstartchallenge.vault.azure.net/"
				}
			},
			"dependsOn": []
		}
	]
}